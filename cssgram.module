<?php

/**
 * @file
 * Contains module code.
 */

/**
 * Implements hook_help().
 */
function cssgram_help($path, $arg) {
  switch ($path) {
    case 'admin/help#cssgram':
      $output = file_get_contents(drupal_get_path('module', 'cssgram') . '/README.md');
      return $output;
  }
}

/**
 * Implements hook_field_formatter_info_alter().
 */
function cssgram_field_formatter_info_alter(&$info) {
  $info['image']['settings']['cssgram_filter'] = '';
}

/**
 * Implements hook_field_formatter_settings_summary_alter().
 */
function cssgram_field_formatter_settings_summary_alter(&$summary, $context) {
  if ($context['instance']['display'][$context['view_mode']]['type'] == 'image') {
    $display = $context['instance']['display'][$context['view_mode']];
    $filter_summary = $display['settings']['cssgram_filter'];
    if (!empty($summary)) {
      $summary .= '';
    }
    if ($filter_summary) {
      $summary .= ',' . ' ';
      $summary .=  t('Filter Selected:') . ' ' . $filter_summary;
    }
  }
}

/**
 * Implements hook_field_formatter_settings_form_alter().
 */
function cssgram_field_formatter_settings_form_alter(&$settings_form, $context) {
  require('includes/cssgram.filters.inc');
  if (($context['instance']['display'][$context['view_mode']]['type']) == 'image') {
    $display = $context['instance']['display'][$context['view_mode']];
    $settings = $display['settings'];
    $settings_form['cssgram_filter'] = array(
      '#type' => 'select',
      '#title' => t('Select Filter'),
      '#default_value' => $settings['cssgram_filter'],
      '#options' => $filters,
    );
  }
}

/**
 * Implements hook_preprocess_field().
 */
function cssgram_preprocess_field(&$variables) {
  if ($variables['element']['#formatter'] == 'image') {
    $entity_type = $variables['element']['#entity_type'];
    $field_name  = $variables['element']['#field_name'];
    $bundle      = $variables['element']['#bundle'];
    $view_mode   = $variables['element']['#view_mode'];
    // Get the field formatter settings.
    $formatter_settings = field_formatter_settings_get_instance_display_settings($entity_type, $field_name, $bundle, $view_mode);
    // Make the setting available in the field template
    $field_display['cssgram_filter'] = $formatter_settings['cssgram_filter'];
    $variables['attributes']['class'] = $field_display['cssgram_filter'];

    foreach($variables['items'] as $key => $item){
      $variables['items'][ $key ]['#item']['attributes']['class'][] = $field_display['cssgram_filter'];
    }
    $variables['#attached']['library'] = drupal_add_css('//cssgram-cssgram.netdna-ssl.com/cssgram.min.css', array('type' => 'external'));
  }
}

